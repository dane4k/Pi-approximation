import random as rd
import matplotlib.pyplot as plt

print(
    'Имеем квадрат со стороной a = 2R (R^2), где R - радиус вписанной в него окружности. Вероятность попадания точки\nвнутрь круга P = (S круга) / (S квадрата) = piR^2/a^2 = piR^2/(2R)^2 = pi/4. Эта вероятность\nP = (N попавших точек) / (N всего точек). Следовательно, число пи будет равно pi = 4 * (N1 / Nобщ).')


def pi_approximation(points_quantity):  # функция аппроксимации числа пи
    points_inside = 0  # количество точек внутри круга
    points_total = 0  # всего точек
    x_inside = []  # x координаты точек внутри круга
    y_inside = []  # y координаты точек внутри круга
    x_outside = []  # x координаты точек снаружи круга
    y_outside = []  # y координаты точек снаружи круга

    for iteration in range(points_quantity):  # генерирует указанное количество случайных точек
        x = rd.uniform(-1, 1)  # случайное float число, переменная-координата x
        y = rd.uniform(-1, 1)  # случайное float число, переменная-координата y

        if x ** 2 + y ** 2 <= 1:  # если точка попадает в круг (x^2 + y^2 = 1 - окружность)
            points_inside += 1  # добавляет в переменную точек внутри круга 1 (+1 попавшая точка)
            x_inside.append(x)  # добавляет в список координату x попавшей точки
            y_inside.append(y)  # добавляет в список координату x попавшей точки
        else:  # если точка не попадает в круг
            x_outside.append(x)  # добавляет в список координату x не попавшей в круг точки
            y_outside.append(y)  # добавляет в список координату y не попавшей в круг точки

        points_total += 1  # добавляем в переменную количества точек 1 (+1 обработанная точка)

    pi_approximation = 4 * (
            points_inside / points_total)  # вычисляет аппроксимацию числа pi = 4 * N1 * Nобщ (по соотношению площадей круга и квадрата)

    plt.scatter(x_inside, y_inside, label='Внутри круга')  # нанесение на график точек, попавших внутрь круга
    plt.scatter(x_outside, y_outside, label='Снаружи круга')  # нанесение на график точек, не попавших внутрь круга

    circle = plt.Circle((0, 0), 1,
                        fill=False)  # создание пустой окружности на координатах (0; 0) с радиусом R = 1 (вписана в квадрат)
    plt.gca().add_patch(circle)  # добавление созданной окружности на график

    plt.legend(fontsize='9',
               loc='upper left')  # добавление легенду на график (пояснение к нанесенным точкам в зависимости от их цвета)
    plt.title(f'Аппроксимация числа π. π = {pi_approximation}')  # заголовок
    plt.show()  # результат

    return pi_approximation  # возвращаем аппроксимированное число пи


print(pi_approximation(500))
